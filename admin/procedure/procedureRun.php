<?php
 define('IN_DAEM', true); include '../includes/init.php'; require_once "../hightech/excelBIConfig.php"; include '../includes/process.func.php'; $realNameAry = get_user_realname(); $id = !empty($_GET["id"]) ? $_GET["id"] : ''; $pid = !empty($_GET["pid"]) ? $_GET["pid"] :''; if(empty($id) && empty($pid))gourl("缺少关键参数!","",-1); $currentLocation = !empty($_GET["currentLocation"]) ? $_GET["currentLocation"] : ''; $departmentAdminAry = get_department_admin(); $formDataAry = getCaseParamValue($id); if($id > 0) { $sql = "select a.*,b.process_title,b.config_data,b.node_property_config,b.type,b.debug from case_management a inner join process_management b
            where a.id = '".$id."' and a.process_id = b.id"; } else { $sql = "select * from  process_management where id = '".$pid."'"; } $result = $db->query_first($sql); if($result["status"] == 2) gourl("流程案例当前被挂起，请等待!","",-1); $processJsonData = $result["config_data"]; $processAry = json_decode($processJsonData,true); $nodePropertyConfigJsonData = $result["node_property_config"]; $nodePropertyAry = json_decode($nodePropertyConfigJsonData,true); if(empty($currentLocation)) { $startNode = findNodeLineList($processAry["nodes"],array('type'=>'start round mix')); $startNodeKey = key($startNode); $lineA = findNodeLineList($processAry["lines"],array('from'=>$startNodeKey)); $lineA = reset($lineA); $nodeA = array($lineA["to"]=>$processAry["nodes"][$lineA["to"]]); if($nodeA[key($nodeA)]["type"] != "task") gourl("流程配置异常：开始节点后一个节点必须为task节点!","",-1); if(empty($nodePropertyAry[key($nodeA)]["ele_table"])) gourl("流程配置异常：当前任务节点未配置关联表单!","",-1); $currentLocation = key($nodeA); } $caseName = (empty($id) && $pid > 0 ) ? $result["process_title"]."_".$realNameAry[$_SESSION["UserName"]]."_".date("Ymd") : $result["case_name"]; if(!empty($_POST)) { if(empty($id) && $pid > 0 ) { $sql = "insert into case_management set
                case_name = '".$caseName."',
                process_id = '".$pid."',
                status = '1',
                builder = '".$_SESSION["UserName"]."',
                create_time = '".DAEM_TIME."'"; $db->query($sql); $id = $db->insert_id(); } $depositFilePath = array(); if(!empty($_FILES)) { foreach($_FILES as $key=>$val) { $fileBasicPath = file_upload_param(DAEM_DATA_ROOT."upload/attachment",$key); $filePath = "data/upload/attachment/".basename($fileBasicPath); $tmpFileTypeAry = explode('.',$val["name"]); $depositFilePath[$key] = array("fileName"=>$val["name"],"type"=>$tmpFileTypeAry[1],"path"=>$filePath); } } else { foreach($_POST as $key=>$val) { if(strpos($val, "@@") !== false) { $tmpDepositFilePathAry = explode("@@",$val); $key = rtrim($key,"@"); $depositFilePath[$key] = array("fileName"=>$tmpDepositFilePathAry[0],"path"=>$tmpDepositFilePathAry[1]); } } } $_REQUEST = array_merge($depositFilePath,$_REQUEST); $formDataAry = $_REQUEST; unset($formDataAry["template_id"]); unset($formDataAry["current_location"]); unset($formDataAry["template_struct"]); unset($formDataAry["act"]); $formDataJson = _json_encode($formDataAry); $sql1 = "insert into case_attach SET
            cid = '".$id."',
            current_location = '".$_POST["current_location"]."',
            current_executor = '".$_SESSION["UserName"]."',
            template_id = '".$_POST["template_id"]."',
            template_struct = '".$_POST["template_struct"]."',
            form_data = '".$formDataJson."',
            version = '".$_POST["version"]."',
            status = 'subForm',
            builder = '".$_SESSION["UserName"]."',
            create_time = '".DAEM_TIME."',
            last_update_time = '".DAEM_TIME."',
            final_modifier = '".$_SESSION["UserName"]."'"; $db->query($sql1); $insert_id = $db->insert_id(); $nextNodeResult = getFlowNextNode($insert_id); if(empty($nextNodeResult)) gourl("未找到下一个流程节点，流程未完结中断，请返回重新检视流程网关Gateway信息后重新提交！","",-1); $current_location = empty($result["current_location"]) ? $nextNodeResult : str_replace($_POST[current_location],$nextNodeResult,$result["current_location"]); if(empty($current_location)) gourl("流程节点异常，流程出现无法匹配流转，请重新检视流程配置！","",-1); $current_executor = ''; $currentLocationAry = explode(';',$current_location); foreach($currentLocationAry as $key=>$val) { $current_executor .= $nodePropertyAry[$val]["ele_role"].';'; } $current_executor = trim($current_executor,';'); $form_circulation_sequence = empty($result["form_circulation_sequence"]) ? $insert_id : $result["form_circulation_sequence"].','.$insert_id; $history = empty($result["history"]) ? $insert_id : $result["history"].','.$insert_id; $sql2 = "update case_management set form_circulation_sequence = '".$form_circulation_sequence."',
            current_location = '".$current_location."',
            current_executor = '".$current_executor."',
            history = '".$history."',
            last_update_time = '".DAEM_TIME."',
            final_modifier = '".$_SESSION["UserName"]."'
            where id = '".$id."'"; $res = $db->query($sql2); if($res) { gourl("提交成功，流程进入下一步!","./procedureManagement.php"); } else { $sqlRollback = "delete from case_attach where id = '".$insert_id."'"; $db->query($sqlRollback); gourl("提交失败，回滚事务!","",-1); } } if(check_user_ele_role($nodePropertyAry[$currentLocation]["ele_role"])) { if(empty($nodePropertyAry[$currentLocation]["ele_table"])) { gourl("节点未配置表单或事件触发器等，请返回检查流程配置!","",-1); } $tmpTableId = ""; $tmpTableIdAry = explode(',',$nodePropertyAry[$currentLocation]["ele_table"]); foreach($tmpTableIdAry as $val) { $tmpTableIdAryDepth2 = explode(':',$val); $tmpTableId .= $tmpTableIdAryDepth2[0].","; } $tmpTableId = trim($tmpTableId,','); $resultDataAry = array(); $sql = "select * from excel_template_struct where id IN (".$tmpTableId.")  order by field(id,".$tmpTableId.")"; $query = $db->query($sql); while($row = $db->fetch_array($query)) { $resultDataAry[$row["id"]] = $row; } $templateDataAry = array(); foreach($resultDataAry as $key=>$val) { $templateDataAry[$key] = json_decode($val["template_struct"],true); foreach($templateDataAry[$key] as $kk=>$vv) { foreach($vv as $k=>$v) { $templateDataAry[$key][$kk][$k]["name"] = base64_decode($templateDataAry[$key][$kk][$k]["name"]); $templateDataAry[$key][$kk][$k]["value"] = base64_decode($templateDataAry[$key][$kk][$k]["value"]); if($elementTypeConfigAry[$templateDataAry[$key][$kk][$k]["type"]]) { $sql = "select config_data from form_element_defined where form_element_sign = '".$templateDataAry[$key][$kk][$k]["formElement"]."'"; $result = $db->query_first($sql); $formElementDataAry = unserialize($result["config_data"]); $templateDataAry[$key][$kk][$k]["formElementDataAry"] = $formElementDataAry; } $elementPropertyInfoAry = elementPropertyInfo($templateDataAry[$key][$kk][$k]["property"]); if(!empty($elementPropertyInfoAry)) { $templateDataAry[$key][$kk][$k]["propertyInfo"] = $elementPropertyInfoAry; $templateDataAry[$key][$kk][$k]["propertyInfo"]["defaultValue"] = parse_params_return($elementPropertyInfoAry["default_value_config"]); $formDataAry[$templateDataAry[$key][$kk][$k]["param"]] = empty($formDataAry[$templateDataAry[$key][$kk][$k]["param"]]) ? $templateDataAry[$key][$kk][$k]["propertyInfo"]["defaultValue"] : $formDataAry[$templateDataAry[$key][$kk][$k]["param"]]; } $elementPropertyInfoAry = ''; } } } $maxCountNum = 0; foreach($templateDataAry as $val) { $maxCountNum = (innerArrayCount($val)*2 > $maxCountNum) ? innerArrayCount($val)*2 : $maxCountNum; } include template(); } else { gourl("无权限操作该流程","",-1); } function findNodeLineList($haystack,$conditionAry=array()) { $nodeArray = array(); foreach($haystack as $key=>$depth1) { foreach($depth1 as $kk=>$vv) { if(isset($conditionAry[$kk]) && $conditionAry[$kk]==$vv) { $nodeArray[$key] = $haystack[$key]; } } } return $nodeArray; } function innerArrayCount($dataAry) { $maxCountNum = 0; foreach($dataAry as $key=>$val) { if(count($val)>$maxCountNum) { $maxCountNum = count($val); } } return $maxCountNum; } function getFlowNextNode($case_attach_id) { global $db; $sql = "select a.*,b.process_id from case_attach a inner join case_management b where a.cid = b.id and  a.id = '".$case_attach_id."'"; $result = $db->query_first($sql); if(empty($result)) return; $sql = "select * from process_management where id = '".$result["process_id"]."'"; $resultProcessInfo = $db->query_first($sql); $processJsonData = $resultProcessInfo["config_data"]; $processAry = json_decode($processJsonData,true); $nodePropertyConfigJsonData = $resultProcessInfo["node_property_config"]; $nodePropertyAry = json_decode($nodePropertyConfigJsonData,true); $nodePropertyGateway = $nodePropertyAry[$result["current_location"]]["ele_gateway"]; $lineA = findNodeLineList($processAry["lines"],array('from'=>$result["current_location"])); $geteWayAry = parseGateway($nodePropertyGateway); $nextNodeResult = ''; if(empty($nodePropertyGateway)) { foreach($lineA as $key=>$val) { $nextNodeResult .= $val["to"].";"; } } else { $_depositDataAry = json_decode($result["form_data"],true); foreach($geteWayAry as $key=>$val) { if(eval("return $val;")) { $nextNodeResult .= $key.';'; } } } $nextNodeResult = trim($nextNodeResult,';'); return $nextNodeResult; } function parseGateway($gatewayString) { $gatewayString = htmlspecialchars_decode($gatewayString); $gatewayString = trim($gatewayString,';'); $dataAry = array(); $tmpGatewayAry = explode(';',$gatewayString); foreach($tmpGatewayAry as $key=>$val) { $tmpAry = explode(':',$val); $tmpAry[1] = '$_depositDataAry[\''.$tmpAry[1]; $tmpAry[1] = str_replace(array("&&","||"),array('\'&&$_depositDataAry[\'','\'||$_depositDataAry[\''),$tmpAry[1]); $tmpAry[1] .= '\''; $tmpAry[1] = str_replace(array("==","!=",">","<",">=","<="),array('\']==\'','\']!=\'','\']>\'','\']<\'','\']>=\'','\']<=\''),$tmpAry[1]); $dataAry[$tmpAry[0]] = $tmpAry[1]; } return $dataAry; } function parseEleTableConfig($ele_table) { $ele_table = htmlspecialchars_decode($ele_table); $dataAry = array(); $tmpEleTableConfigAry = explode(',',$ele_table); foreach($tmpEleTableConfigAry as $val) { $tmpEleTableDepth1 = explode(':',$val); $tmpEleTableDepth2 = explode('&&',$tmpEleTableDepth1[2]); $dataAry[$tmpEleTableDepth1[0]]["type"] = $tmpEleTableDepth1[1]; foreach($tmpEleTableDepth2 as $kk=>$vv) { if(empty($vv)) continue; $dataAry[$tmpEleTableDepth1[0]]["exception"][$vv] = 1; } } return $dataAry; } function checkParamReadonly($tableId,$paramName) { global $nodePropertyAry,$currentLocation; $parseEleTableConfigAry = parseEleTableConfig($nodePropertyAry[$currentLocation]["ele_table"]); if(!isset($parseEleTableConfigAry[$tableId])) return; else { if($parseEleTableConfigAry[$tableId]["type"] == "readonly") { if($parseEleTableConfigAry[$tableId]["exception"][$paramName] == 1) return; else return "readonly=\"readonly\""; } else { if($parseEleTableConfigAry[$tableId]["exception"][$paramName] != 1) return; else return "readonly=\"readonly\""; } } } function getCaseParamValue($caseId) { global $db; if($caseId <= 0) return; $sql = "select form_circulation_sequence from case_management where id = '".$caseId."'"; $result = $db->query_first($sql); $formCirculationSequence = $result["form_circulation_sequence"]; $formDataAry = array(); $sql = "select * from case_attach where id IN (".$formCirculationSequence.")  order by field(id,".$formCirculationSequence.")"; $query = $db->query($sql); while($row = $db->fetch_array($query)) { $tmpFormDataAry = json_decode($row["form_data"],true); foreach($tmpFormDataAry as $key=>$val) { $formDataAry[$key] = $val; } } return $formDataAry; } function elementPropertyInfo($propertySign) { if(empty($propertySign)) return; global $db; $sql = "select * from element_property_extra where element_property_sign = '".$propertySign."'"; $result = $db->query_first($sql); return $result; } 