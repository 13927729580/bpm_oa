<?php
 require_once("grid_connector.php"); class TreeGridDataItem extends GridDataItem{ private $kids=-1; function __construct($data,$config,$index){ parent::__construct($data,$config,$index); $this->im0=false; } function get_parent_id(){ return $this->data[$this->config->relation_id["name"]]; } function set_image($img){ $this->set_cell_attribute($this->config->text[0]["name"],"image",$img); } function has_kids(){ return $this->kids; } function set_kids($value){ $this->kids=$value; if ($value) $this->set_row_attribute("xmlkids",$value); } } class TreeGridConnector extends GridConnector{ protected $parent_name = 'id'; public function __construct($res,$type=false,$item_type=false,$data_type=false,$render_type=false){ if (!$item_type) $item_type="TreeGridDataItem"; if (!$data_type) $data_type="TreeGridDataProcessor"; if (!$render_type) $render_type="TreeRenderStrategy"; parent::__construct($res,$type,$item_type,$data_type,$render_type); } public function parse_request(){ parent::parse_request(); if (isset($_GET[$this->parent_name])) $this->request->set_relation($_GET[$this->parent_name]); else $this->request->set_relation("0"); $this->request->set_limit(0,0); } protected function xml_start(){ return "<rows parent='".$this->request->get_relation()."'>"; } } class TreeGridDataProcessor extends GridDataProcessor{ function __construct($connector,$config,$request){ parent::__construct($connector,$config,$request); $request->set_relation(false); } function name_data($data){ if ($data=="gr_pid") return $this->config->relation_id["name"]; else return parent::name_data($data); } } ?>