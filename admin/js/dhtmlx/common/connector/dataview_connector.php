<?php
 require_once("base_connector.php"); class DataViewDataItem extends DataItem{ function to_xml(){ if ($this->skip) return ""; $str="<item id='".$this->get_id()."' >"; for ($i=0; $i<sizeof($this->config->text); $i++){ $extra = $this->config->text[$i]["name"]; $str.="<".$extra."><![CDATA[".$this->data[$extra]."]]></".$extra.">"; } return $str."</item>"; } } class DataViewConnector extends Connector{ public function __construct($res,$type=false,$item_type=false,$data_type=false){ if (!$item_type) $item_type="DataViewDataItem"; if (!$data_type) $data_type="DataProcessor"; parent::__construct($res,$type,$item_type,$data_type); } function parse_request(){ parent::parse_request(); if (isset($_GET["posStart"]) && isset($_GET["count"])) $this->request->set_limit($_GET["posStart"],$_GET["count"]); } protected function xml_start(){ $attributes = ""; foreach($this->attributes as $k=>$v) $attributes .= " ".$k."='".$v."'"; $start.= ">"; if ($this->dload){ if ($pos=$this->request->get_start()) return "<data pos='".$pos."'".$attributes.">"; else return "<data total_count='".$this->sql->get_size($this->request)."'".$attributes.">"; } else return "<data".$attributes.">"; } } ?>