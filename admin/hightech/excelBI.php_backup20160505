<?php
 define('IN_DAEM', true); include '../includes/init.php'; require_once '../includes/excel/Classes/PHPExcel.php'; require_once "./excelBIConfig.php"; require_once "../includes/class/pinyin.class.php"; $filePath = DAEM_DATA_ROOT."upload/lala.xlsx"; function GetData($val){ $jd = GregorianToJD(1, 1, 1970); $gregorian = JDToGregorian($jd+intval($val)-25569); return $gregorian; } $PHPExcel = new PHPExcel(); $PHPReader = new PHPExcel_Reader_Excel2007(); if(!$PHPReader->canRead($filePath)){ $PHPReader = new PHPExcel_Reader_Excel5(); if(!$PHPReader->canRead($filePath)){ echo 'no Excel'; return ; } } $dataString = ""; $PHPExcel = $PHPReader->load($filePath); $currentSheet = $PHPExcel->getSheet(0); $allColumn = $currentSheet->getHighestColumn(); $allRow = $currentSheet->getHighestRow(); for($currentRow = 2;$currentRow <= $allRow;$currentRow++){ for($currentColumn= 'A';$currentColumn<= $allColumn; $currentColumn++){ $val = $currentSheet->getCellByColumnAndRow(ord($currentColumn) - 65,$currentRow)->getValue(); if($currentColumn == 'A') { $dataString .= $val; }else{ $dataString .= $val; } } $dataString .= "<br>"; } $dataAry = $checkParamAry = array(); $dataString = cicleReplace("<br><br><br>","<br><br>",$dataString); $dataString = str_replace(array("<br>□","<br>√","<br><br>"),array("<ibr>□","<ibr>√","<obr><br>"),$dataString); $dataStringToArray = explode("<br>",$dataString); foreach($dataStringToArray as $key=>$val) { $val = trim($val); if(empty($val)) continue; $pattern = '/\[(.*)\]/isU'; preg_match_all($pattern, $val, $matchess); $dataValueStr = str_replace($matchess['0'],'[]',$val); $dataValueArray = explode('[]',$dataValueStr); unset($dataValueArray[0]); if(count($matchess['1']) >0) { $step=0; foreach($matchess['1'] as $k=>$v) { $v = trim($v); $param = in_array(CUtf8_PY::encode($v),$checkParamAry) ? CUtf8_PY::encode($v).$key : CUtf8_PY::encode($v); $checkParamAry[] = $param; $dataAry[$key][$step]["param"] = $param; $dataAry[$key][$step]["name"] = trim($v,'*'); $dataAry[$key][$step]["value"] = $dataValueArray[$step+1]; $dataAry[$key][$step]["type"] = "text"; if(stristr($dataAry[$key][$step]["value"],"<obr>")) { $dataAry[$key][$step]["type"] = "textarea"; $dataAry[$key][$step]["value"] = str_replace("<obr>","",$dataAry[$key][$step]["value"]); } $dataAry[$key][$step]["isNeed"] = 0; if($v[strlen($v)-1] == '*') { $dataAry[$key][$step]["isNeed"] = 1; } $step++; } } else { $param = in_array(CUtf8_PY::encode($val),$checkParamAry) ? CUtf8_PY::encode($val).$key : CUtf8_PY::encode($val); $checkParamAry[] = $param; $dataAry[$key][0]["param"] = $param; $dataAry[$key][0]["name"] = $val; $dataAry[$key][0]["type"] = "title"; } } $maxCountNum = innerArrayCount($dataAry)*2; function cicleReplace($search,$replace,$haystack) { if(empty($search) || empty($haystack)) return $haystack; for($i=0;$i>=0;$i++) { if(stristr($haystack,$search)) { $haystack = str_replace($search,$replace,$haystack); } else break; } return $haystack; } function excelTime($date, $time = false) { if(function_exists('GregorianToJD')){ if (is_numeric( $date )) { $jd = GregorianToJD( 1, 1, 1970 ); $gregorian = JDToGregorian( $jd + intval ( $date ) - 25569 ); $date = explode( '/', $gregorian ); $date_str = str_pad( $date [2], 4, '0', STR_PAD_LEFT ) ."-". str_pad( $date [0], 2, '0', STR_PAD_LEFT ) ."-". str_pad( $date [1], 2, '0', STR_PAD_LEFT ) . ($time ? " 00:00:00" : ''); return $date_str; } }else{ $date=$date>25568?$date+1:25569; $ofs=(70 * 365 + 17+2) * 86400; $date = date("Y-m-d",($date * 86400) - $ofs).($time ? " 00:00:00" : ''); } return $date; } function innerArrayCount($dataAry) { $maxCountNum = 0; foreach($dataAry as $key=>$val) { if(count($val)>$maxCountNum) { $maxCountNum = count($val); } } return $maxCountNum; } if($_GET["act"]=="edit") { include template("hightech","excelBI"); } else { include template(); } 