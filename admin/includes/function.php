<?php
function gourl($alert,$page,$history='',$target="window") { if ($alert != "") { echo '<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />'; echo '<script language="javascript">alert("'.$alert.'")</script>'; } if ($page != "") { echo '<script language="javascript">'.$target.'.location.href = "'.$page.'";</script>'; } if ($history != "") { echo '<script language="javascript">history.go('.$history.');</script>'; } exit; } function showpage($page,$pagesize,$count,$url) { if ($page == "") { $page = 1; } if($count == 0) { $pagestr="<font color='red'>".L("没有搜索到合乎的记录！")."</font>"; return $pagestr; } $pagenum = ceil($count / $pagesize); $pagestr=L("总计")."<font color=\"#FF0000\">".$count."</font>".L("记录")."&nbsp;&nbsp;".L("第")."<font color=\"#FF0000\">$page</font>/".$pagenum."".L("页")."&nbsp;&nbsp;"; if($page==1) { $pagestr.=L("首页")."&nbsp;&nbsp;".L("上一页")."&nbsp;&nbsp;"; } else { $pagestr.="<a href=\"".$url."\">".L("首页")."</a>&nbsp;&nbsp;<a href=\"".$url."page=".($page-1)."\">".L("上一页")."</a>&nbsp;&nbsp;"; } if($page<$pagenum) { $pagestr.="<a href=\"".$url."page=".($page+1)."\">".L("下一页")."</a>&nbsp;&nbsp;<a href=\"".$url."page=".$pagenum."\">".L("尾页")."</a>"; } else { $pagestr.=L("下一页")."&nbsp;&nbsp;".L("尾页"); } $pagestr.="&nbsp;&nbsp;".L("第")."<input style='width:44px' type='text' name=\"pageno\" id=\"pageno\" value=\"$page\" onchange=\"
	GetElementsByName('input','pageno',this.value);
	\">".L("页")."
	<input type='button' id='iPageButton' name='iPageButton' onClick='

		if(!(/^-?\d+$/.test(document.getElementById(\"pageno\").value)))
		{
			alert(\"".L("页码请输入数字!")."\");
			return false;
		}
		if(document.getElementById(\"pageno\").value>$pagenum || document.getElementById(\"pageno\").value<1)
		{
			alert(\"".L("输入数字不在页码范围!")."\");
			return false;
		}
		else if(document.getElementById(\"pageno\").value == $page)
		{
			alert(\"".L("已是当前页!")."\");return false
		}
		else
		{
			javascript:window.location=\"".$url."page=\"+document.getElementById(\"pageno\").value
		}
		' value='GO'>
	"; return $pagestr; } function triphtml($string) { $string = preg_replace('/<.*?>/', '', $string); if(is_array($string)) { foreach($string as $key =>$val) { $string[$key] = triphtml(trim($val)); } }else { $string = trim($string); $string = str_replace(array('&','"','\'','<','>',"\t","\r",'{','}'),array('&amp;','&quot;','&#39;','&lt;','&gt;','&nbsp;&nbsp;','','&#123;','&#125;'),$string); } return $string; } function writerecord($userid,$content,$name,$file = '') { global $db; empty($file) ? ($file = DAEM_DATA_ROOT.'/home/adminLog/writerecord.txt') : ''; $sql = "select a_account from ".DB_DAEMDB.".".TB_SUFFIX."db_adminuser where a_id='".$userid."'"; if (!$row = $db->query_first($sql)) { $db->close(); gourl('操作记录保存失败，未查询到该用户信息。','',-1); } $account = $row['a_account']; $array = array(); $array[0] = array('account'=>$account,'content'=>$content,'name'=>$name,'time'=>time()); $file_content = unserialize(file_get_contents($file)); $i = 1; foreach ($file_content as $val) { $array[$i] = array('account'=>$val['account'],'content'=>$val['content'],'name'=>$val['name'],'time'=>$val['time']); $i++; } $serialize_array = serialize($array); $handle = fopen($file,"w"); fwrite($handle,$serialize_array); fclose($handle); } function chkpurview($label) { global $db; $sql = "select b.g_name from ".DB_DAEMDB.".".TB_SUFFIX."db_adminuser as a left join ".DB_DAEMDB.".".TB_SUFFIX."db_admingroup as b on a.a_gid=b.g_id where a.a_id='".$_SESSION['UserId']."'"; if (!$row = $db->query_first($sql)) { $db->close(); gourl('','../noqx.html'); } if ($row['g_name'] != 'administrator') { $sql = "select b.r_id from ".DB_DAEMDB.".".TB_SUFFIX."db_purview as a left join ".DB_DAEMDB.".".TB_SUFFIX."db_resource as b on b.r_id=a.p_rid where b.r_label='".$label."'"; if (!$db->query_first($sql)) { $db->close(); gourl('','../noqx.html'); } } } function makeInsertSqlFromArray($arr, $table) { $str1 = $str2 = ''; foreach($arr as $k=>$v) { $str1 .= "`{$k}`,"; $str2 .= "'{$v}',"; } $str = "INSERT INTO `{$table}` (" . trim($str1, ', ') . ") VALUES (" . trim($str2, ', ') . ")"; return $str; } function template($mod='' , $template='') { $modAry = array(); $modAry = debug_backtrace(); if (empty($mod)) { $mod = basename( dirname($modAry[0]['file']) ); } if (empty($template)) { $baseName = basename($modAry[0]['file']); $template = substr( $baseName, 0, strpos( $baseName, '.' )); } $compiledtplfile = $template=='show_message' ? DAEM_TEMPLATE_CACHE_ROOT.$template.'.tpl.php' : DAEM_TEMPLATE_CACHE_ROOT.$mod.'_'.$template.'.tpl.php'; if(TEMPLATE_FRESH) { $tplfile = ROOT_PATH.'templates/'.($mod=='admin' ? '' : $mod.'/').$template.'.html.php'; if(!file_exists($compiledtplfile) || @filemtime($tplfile) > @filemtime($compiledtplfile)) { require_once ROOT_PATH.'/includes/template.func.php'; template_refresh($tplfile, $compiledtplfile); } } return $compiledtplfile; } function get_section($name,$ary_option,$sected='',$ary_first='',$id='',$js='',$style='',$etc='') { echo "<select name='".$name."' id='".($id?$id:'')."'".($js?' '.$js.' ':'').($style == ""? "" : "style ='".$style."'").($etc == ""? "" : ' '.$etc).'  class="chzn_a">\n'; if(is_array($ary_first)) { foreach ($ary_first as $key=>$val) { echo '<option value="'.$key.'">'.$val.'</option>'; } } if(is_array($ary_option)) { foreach ($ary_option as $k=>$v) { echo '<option value="'.$k.'"'.($sected==$k ? ' selected="selected"' : '').'>'.$v."</option>\n"; } } echo '</select>'; } function get_return_section($name,$ary_option,$sected='',$ary_first='',$id='',$js='',$style='',$etc='') { $resultString = "<select name=\"".$name."\" id=\"".($id?$id:'')."\"".($js?' '.$js.' ':'').($style == ""? "" : "style =\"".$style."\"").($etc == ""? "" : ' '.$etc).'  class="chzn_a">\n'; if(is_array($ary_first)) { foreach ($ary_first as $key=>$val) { $resultString .= '<option value="'.$key.'">'.$val.'</option>'; } } if(is_array($ary_option)) { foreach ($ary_option as $k=>$v) { $resultString .= '<option value="'.$k.'"'.($sected==$k ? ' selected="selected"' : '').'>'.$v."</option>"; } } $resultString .= '</select>'; return $resultString; } function get_per_time($nyr='') { $ary = array(); for($h=0;$h<24;$h++) { $sh = sprintf('%02d',$h); for ($i=0;$i<12;$i++) { $ary[] = ($nyr?$nyr.' ':'').$sh.':'.sprintf('%02d',$i*5); } } $ary[] = $ary[0]; unset($ary[0]); return $ary; } function strip_sql(&$string) { $sqlfrom = array("/ union /i","/ select /i","/ update /i","/ outfile /i","/ or /i","/ delete /i"); $sqlto = array('&nbsp;union&nbsp;','&nbsp;select&nbsp;','&nbsp;update&nbsp;','&nbsp;outfile&nbsp;','&nbsp;or&nbsp;','&nbsp;delete&nbsp;'); return is_array($string) ? array_map('strip_sql',$string) : preg_replace($sqlfrom,$sqlto,$string); } function strip_html(&$string) { return is_array($string) ? array_map('strip_html',$string) : htmlspecialchars($string,ENT_QUOTES); } function str_cut($str, $length=0, $start =0, $charset = "utf-8") { if(strlen($str)<4) return $str; $re['utf-8'] = "/[\x01-\x7f]|[\xc2-\xdf][\x80-\xbf]|[\xe0-\xef][\x80-\xbf]{2}|[\xf0-\xff][\x80-\xbf]{3}/"; $re['gb2312'] = "/[\x01-\x7f]|[\xb0-\xf7][\xa0-\xfe]/"; $re['gbk'] = "/[\x01-\x7f]|[\x81-\xfe][\x40-\xfe]/"; $re['big5'] = "/[\x01-\x7f]|[\x81-\xfe]([\x40-\x7e]|\xa1-\xfe])/"; preg_match_all($re[$charset], $str, $match); if($length==0) $length=count($match[0]); for(;;) { return join("", array_slice($match[0], $start, $length)); } } function myrecord($content,$menu_name,$uid,$number,$file = '') { global $_SESSION; empty($file) ? ($file = DAEM_DATA_ROOT.'/home/adminLog/myrecord.txt') : ''; $array = array(); $array[0] = array('account'=>$_SESSION['UserName'],'content'=>$content,'name'=>$menu_name,'uid'=>$uid,'number'=>$number,'time'=>time()); $file_content = unserialize(file_get_contents($file)); $i = 1; foreach ($file_content as $val) { $array[$i] = array('account'=>$val['account'],'content'=>$val['content'],'name'=>$val['name'],'uid'=>$val['uid'],'number'=>$val['number'],'time'=>$val['time']); $i++; } $serialize_array = serialize($array); $handle = fopen($file,"w"); fwrite($handle,$serialize_array); fclose($handle); } function get_params($exclude_array = '') { global $_GET; if ($exclude_array == '') $exclude_array = array(); $get_url = ''; reset($_GET); while (list($key, $value) = each($_GET)) { $value = urlencode($value); if (($key != session_name()) && ($key != 'error') && (!in_array($key, $exclude_array))) $get_url .= $key . '=' . $value . '&'; } return $get_url; } function get_search_key($minid,$maxid,$table,$key_name,$search_name,$search_value,$type,$deep=20,$exitv=3600) { global $db; if($minid == 1) { $min_query = $db->query("select min($key_name) as minid from $table"); $rsmin = $db->fetch_array($min_query); if($rsmin && $rsmin['minid'] > 1) $minid = $rsmin['minid']; } if($deep==0 || ($maxid-$minid) < $exitv) { return $type=='max' ? $maxid : $minid; } $id = round(($minid+$maxid)/2); $query = $db->query("select $key_name, $search_name from $table where $key_name <= $id order by id desc limit 1"); $rs = $db->fetch_array($query); if( !$rs || ( $rs && $rs[$key_name] <= $minid ) ) { return $type=='max' ? $maxid : $minid; } $id = $rs[$key_name]; if( $rs[$search_name] < $search_value ) { $minid = $id; $deep--; return get_search_key($minid,$maxid,$table,$key_name,$search_name,$search_value,$type,$deep,$exitv); } elseif( $rs[$search_name] > $search_value ) { $maxid = $id; $deep--; return get_search_key($minid,$maxid,$table,$key_name,$search_name,$search_value,$type,$deep,$exitv); } else { if($type=='max') $sql = "select $key_name, $search_name from $table where $key_name > $id and $search_name > '".$search_value."' order by $key_name limit 1"; else $sql = "select $key_name, $search_name from $table where $key_name < $id and $search_name < '".$search_value."' order by $key_name desc limit 1"; $query = $db->query($sql); if($rs = $db->fetch_array($query)) return $rs[$key_name]; else return $type=='max' ? $maxid : $minid; } } function translate($text,$tlang="zh",$flang="",$formatfrom=array(),$formatto='') { $returnStr = ''; 'cn'===strtolower($tlang) ? ($tlang = 'zh') : ''; $text = urlencode($text); $url = "http://ajax.googleapis.com/ajax/services/language/translate?v=1.0&q={$text}&langpair={$flang}|{$tlang}"; $cl = curl_init( $url); curl_setopt( $cl , CURLOPT_RETURNTRANSFER,true); curl_setopt( $cl, CURLOPT_USERAGENT , 'Mozilla/5.0'); $res = curl_exec($cl); curl_close( $cl); $res = (array)json_decode($res); $res = (array)$res['responseData']; if (empty($formatfrom) || empty($formatto)) { return $res; } else { $retrunstr = str_replace(array('\\','"',"'"), array('','',''), $res); return preg_replace($formatfrom , $formatto , $retrunstr); } } function curl_get($url,$second=30) { $ch = curl_init(); curl_setopt($ch,CURLOPT_TIMEOUT,$second); curl_setopt($ch, CURLOPT_URL,$url); curl_setopt($ch, CURLOPT_HEADER, 0); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); $data = curl_exec($ch); curl_close($ch); if ($data) return $data; else return false; } function curl_post($url, $vars, $second=30) { $ch = curl_init(); curl_setopt($ch,CURLOPT_TIMEOUT,$second); curl_setopt($ch,CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch,CURLOPT_URL,$url); curl_setopt($ch,CURLOPT_POST, 1); curl_setopt($ch,CURLOPT_POSTFIELDS,$vars); $data = curl_exec($ch); curl_close($ch); if($data) return $data; else return false; } function L( $key ) { $key = trim($key); $modAry = array(); $modAry = debug_backtrace(); $lang = LANG_ARR_NAME; global $$lang,$temp_lang; $lang=$$lang; if(!isset($lang[$key])) { $temp_lang[$key] = $key; return $key; } else { return $lang[$key]; } } function upd_L() { $langName = LANG_ARR_NAME; global $$langName,$temp_lang,$mod_lang_path; $mod_lang_path = empty($mod_lang_path) ? '' : $mod_lang_path; echo runInfo(); if(count($temp_lang)) { $str_array=''; $temp_lang = array_unique($temp_lang); foreach($temp_lang as $key => $val) { if (isset($$langName[$key])) { continue; } $str_array.="\r\n".'$'.$langName.'["'.$key.'"]="'.$val.'";'; } if(!file_exists($mod_lang_path)) { file_put_contents($mod_lang_path,'<?php'."\r\n"); } if(!$handle = fopen($mod_lang_path,"a")) { echo "打开语言文件 ".$mod_lang_path." 失败"; exit; } if(fwrite($handle,$str_array)===false) { echo "写入语言文件  ".$mod_lang_path." 失败"; exit; } echo "已更新语言文件：".$mod_lang_path; fclose($handle); } } function runInfo() { $return['time'] = number_format((microtime(true)-START_TIME),4).'s'; $startMem = array_sum(explode(' ',START_MEMORY)); $endMem = array_sum(explode(' ',memory_get_usage())); $return['memory'] = number_format(($endMem - $startMem)/1024).'kb'; if ($return['time']>0.2) { $echoMsg = '<div id="FrtDebugFloat" style="Z-INDEX:200;RIGHT:10px;VISIBILITY:visible;POSITION:absolute;border:1px #333333 solid;">
            			<table border="1" cellpadding="1" cellspacing="0">
                            <font size="1">
                            <tbody align="center" bgcolor="#eeeeec">
                            	<tr><th colspan="5" align="center" bgcolor="#f57900">系统运行信息</th></tr>
                                <tr><th></th><th>Time</th><th>Memory</th><th>mode</th><th></th></tr>
                                <tr><td></td><td>'.$return['time'].'</td><td>'.$return['memory'].'</td><td>web</td><td></td></tr>
                    		</tbody>
                    		</font>
                        </table>
                        </div>
            			<script type="text/javascript">
                        //<![CDATA[
                        var tips;
                        var theTop = 10/*这是默认高度,越大越往下*/;
                        var old = theTop;
                        function initFloatTips()
                        {
                        	tips = document.getElementById("FrtDebugFloat");
                        	moveTips();
                        };
                        function moveTips() {
                        var tt=50;
                        if (window.innerHeight) {
                            pos = window.pageYOffset
                        }
                        else if (document.documentElement && document.documentElement.scrollTop) {
                            pos = document.documentElement.scrollTop
                        }
                        else if (document.body) {
                            pos = document.body.scrollTop;
                        }

                        pos=pos-tips.offsetTop+theTop;
                        pos=tips.offsetTop+pos/10;
                        if (pos < theTop) pos = theTop;
                        if (pos != old) {
                            tips.style.top = pos+"px";
                            tt=10;
                        }

                        old = pos;
                        setTimeout(moveTips,tt);
                        }
                        //!]]>
                        initFloatTips();
                        </script>'; } else { return false; } return $echoMsg; } function selected($string,$param =1,$type = 'select') { $returnString = ''; if ($string == $param) { $returnString = $type == 'select'?'selected="selected"': 'checked="checked"'; } return $returnString; } function setPageUrl() { return "?".preg_replace('/&*(page|pageno)=\d{0,}/i', '', $_SERVER["QUERY_STRING"])."&"; } function errorLog( $error, $request_url='', $file="errorLog.log") { if (empty($request_url)) { $debugInfo = debug_backtrace(); $request_url = $debugInfo[0]['file']; $line = '=>line:'.$debugInfo[0]['line']; } else { $line = ''; } $error = "[".date('Y-m-d H:i:s')."]\n"."url=".$request_url.$line." \n".$error."\n\n"; $ip = getIp(); if($ip == "127.0.0.1"){ @file_put_contents(DAEM_DATA_ROOT.'/home/adminLog/127_'.date('Y-m').'_'.$file,$error,FILE_APPEND); }else{ @file_put_contents(DAEM_DATA_ROOT.'/home/adminLog/'.date('Y-m').'_'.$file,$error,FILE_APPEND); } } function getIp() { $realip = ''; if (isset($_SERVER)) { if ( isset($_SERVER["HTTP_X_FORWARDED_FOR"]) ) { $realip = $_SERVER["HTTP_X_FORWARDED_FOR"]; } elseif ( isset($_SERVER["HTTP_CLIENT_IP"]) ) { $realip = $_SERVER["HTTP_CLIENT_IP"]; } else { $realip = $_SERVER["REMOTE_ADDR"]; } } else { if ( getenv("HTTP_X_FORWARDED_FOR") ) { $realip = getenv("HTTP_X_FORWARDED_FOR"); } elseif ( getenv("HTTP_CLIENT_IP") ) { $realip = getenv("HTTP_CLIENT_IP"); } else { $realip = getenv("REMOTE_ADDR"); } } return $realip; } function setDateType($date) { $date = intval($date); return substr($date, 0,4).'-'.substr($date, 4,2).'-'.substr($date, 6,2); } function get_monday( $date, $type="-1" ) { $date = empty($date) ? date('Y-m-d') : $date; return date('Y-m-d',strtotime($type.' Monday',strtotime($date)+86400)); } function get_sunday( $date, $type='+1') { $date = empty($date) ? date('Y-m-d') : $date; return date('Y-m-d',strtotime($type.' Sunday',strtotime($date))); } function checkDateTime($date) { if(empty($date)) return false; $pattern = '/^[\d]{4}-[\d]{2}-[\d]{2} [\d]{2}:[\d]{2}:[\d]{2}$/'; if (preg_match($pattern, $date)) { return true; } else { return false; } } function check_empty_num($num) { if (empty($num) || $num == '') { return '0'; } else { return $num; } } function check_empty_str($str) { if (empty($str) || $str == '') { return 'NULL'; } else { return $str; } } function user_last_visit() { global $db; $url = $_SERVER['REQUEST_URI']; $url = str_replace('/DRS/admin/','',$url); $sql = "select module_sign, length(replace(m_url,'".$url."','')) from ".DB_DAEMDB.".db_menu where m_url like '".$url."%'  order by length(replace(m_url,'".$url."','')) limit 1"; $result = $db->query_first($sql); $moduleSign = $result["module_sign"]; if (!empty($moduleSign)) { $_SESSION['user_record']['last_visit'] = $moduleSign; if ($result['m_parentid']!='0') { $sql = "select * from ".DB_DAEMDB.".db_menu where m_id = '".$result['m_parentid']."'"; $result = $db->query_first($sql); if (!empty($result['module_sign'])) { $_SESSION['user_record']['last_mod'] = $result['module_sign']; } } } } function format_phone_num($phoneNum) { $search = strstr($phoneNum, '-'); if (strlen($phoneNum) == '11' && !empty($search)){ for ($i=0;$i<11;$i++){ if ($i != '2' && $i != '6'){ $tmpPhoneStr .= $phoneNum[$i]; } else $tmpPhoneStr .= '-'; } } return $phoneNum; } function process_str_format($str) { $resultStr = ''; $str = str_replace('，',',',$str); $strAry = explode(',',$str); foreach ($strAry as $key=>$cal) { $resultStr .= trim($cal).','; } $resultStr = rtrim($resultStr,','); return $resultStr; } function get_random_array($array) { $key = rand(1,6); return $array[$key]; } function array_to_string($array,$delimiter=',',$extra='') { $str = ''; foreach($array as $key=>$val) { $str .= $extra.trim($val).$extra.$delimiter; } return rtrim($str, $delimiter); } function set_font_style($color) { $str = ''; if($color != '') { $str = "style=\"color:#ffffff;font-weight:bold;background:".$color.";\""; } return $str; } function get_divide_char($level=0,$step='2',$divide='&nbsp;') { $str = ''; $step = $step*$level; for($i=1;$i<=$step;$i++) { $str .= $divide; } return $str; } function img_upload($icon_upload_path='',$resize='1') { if ((($_FILES['file']['type'] == 'image/gif') || ($_FILES['file']['type'] == 'image/jpeg') || ($_FILES['file']['type'] == 'image/png') || ($_FILES['file']['type'] == 'image/pjpeg')) && ($_FILES['file']['size'] < 3000000) ){ if ($_FILES['file']['error'] > 0) { } else { $icon_upload_path = empty($icon_upload_path) ? './images/icon/upload/icon_'.date('Ym') : $icon_upload_path; if (!file_exists($icon_upload_path)) { $mkSign = mkdir($icon_upload_path,0600); } if (!is_writable($mkSign)) { $writeSign = chmod($mkSign, 0600); } $encryptFileName = md5(time().$_FILES['file']['name']).'.png'; $filePath = $icon_upload_path.'/'.$encryptFileName; if (file_exists($filePath)) { } else { move_uploaded_file($_FILES['file']['tmp_name'],$filePath); if($resize == '1') { include_once '../includes/class/resizeimage.php'; $resizeimage = new resizeimage($filePath, $filePath , "80", "80", "0"); } return $filePath; } } } else { echo 'Invalid file'; } } function file_upload($icon_upload_path='') { if ( ($_FILES['file']['size'] < 8000000) ){ if ($_FILES['file']['error'] > 0) { echo 'Error: ' . $_FILES['file']['error']; } else { $icon_upload_path = empty($icon_upload_path) ? './images/icon/upload/icon_'.date('Ym') : $icon_upload_path; if (!file_exists($icon_upload_path)) { $mkSign = mkdir($icon_upload_path,0600); } if (!is_writable($mkSign)) { $writeSign = @chmod($mkSign, 0600); } $tmpAry = explode('.',$_FILES['file']['name']); $maxKey = (int)count($tmpAry)-1; $encryptFileName = md5(time().$_FILES['file']['name']).'.'.$tmpAry[$maxKey]; $filePath = $icon_upload_path.'/'.$encryptFileName; if (file_exists($filePath)) { } else { move_uploaded_file($_FILES['file']['tmp_name'],$filePath); return $filePath; } } } else { echo 'Invalid file'; } } function file_upload_param($icon_upload_path='',$param="file") { if ( ($_FILES[$param]['size'] < 8000000) ){ if ($_FILES[$param]['error'] > 0) { echo 'Error: ' . $_FILES[$param]['error']; } else { $icon_upload_path = empty($icon_upload_path) ? './images/icon/upload/icon_'.date('Ym') : $icon_upload_path; if (!file_exists($icon_upload_path)) { $mkSign = mkdir($icon_upload_path,0600); } if (!is_writable($mkSign)) { $writeSign = @chmod($mkSign, 0600); } $tmpAry = explode('.',$_FILES[$param]['name']); $maxKey = (int)count($tmpAry)-1; $encryptFileName = md5(time().$_FILES[$param]['name']).'.'.$tmpAry[$maxKey]; $filePath = $icon_upload_path.'/'.$encryptFileName; if (file_exists($filePath)) { } else { move_uploaded_file($_FILES[$param]['tmp_name'],$filePath); return $filePath; } } } else { echo 'Invalid file'; } } function process_product_uri($paramKey,$value) { $tmpAry = explode('?',$_SERVER['REQUEST_URI']); if(empty($tmpAry['1'])) { return $_SERVER['REQUEST_URI'].'?'.$paramKey.'='.$value; } else { $uriCond = ''; $depostAry = array(); $tmpAry2 = explode('&',$_SERVER['QUERY_STRING']); foreach($tmpAry2 as $key=>$val) { $tmpAry3 = explode('=',$val); $paramAry[$tmpAry3['0']] = $tmpAry3['1']; } $paramAry[$paramKey] = $value; foreach($paramAry as $key=>$val) { $uriCond .= $key."=".$val."&"; } $uriCond = trim($uriCond,'&'); return $_SERVER['SCRIPT_NAME'].'?'.$uriCond; } } function get_visit_uri() { $search = str_replace('\\','/',ROOT_PATH); $uriVisit = str_replace($search,'',$_SERVER['SCRIPT_FILENAME']); return $uriVisit; } function get_uri_param_array() { $tmpAry2 = explode('&',$_SERVER['QUERY_STRING']); foreach($tmpAry2 as $key=>$val) { $tmpAry3 = explode('=',$val); $paramAry[$tmpAry3['0']] = $tmpAry3['1']; } return $paramAry; } function get_reffer_page() { $refferUri = $_SERVER['HTTP_REFERER']; $refferAry = explode('?',$refferUri); $refferUriAry = explode('/',$refferAry['0']); $count = count($refferUriAry); return $refferUriAry[$count-1]; } function zipTplInfo($staticTplDataInfo) { return $staticTplDataInfo; } function get_checkbox($name,$id,$dataAry,$value,$etc) { if(is_array($dataAry)) { foreach ($dataAry as $key=>$val) { $checked = ($key==$value) ? "checked" : ""; echo "<label class=\"checkbox inline\"><input type=\"checkbox\" value=\"".$key."\" name=\"".$name."\" $etc $checked /> ".$val."</label>\n"; } } } function get_radio($name,$id,$dataAry,$value,$etc) { if(is_array($dataAry)) { foreach ($dataAry as $key=>$val) { $checked = ($key==$value) ? "checked" : ""; echo "<label class=\"radio inline\"><input type=\"radio\" value=\"".$key."\" name=\"".$name."\" $etc $checked />".$val."</label>\n"; } } } function _json_encode($val) { if (is_string($val)) return '"'.addslashes($val).'"'; if (is_numeric($val)) return $val; if ($val === null) return 'null'; if ($val === true) return 'true'; if ($val === false) return 'false'; $assoc = false; $i = 0; foreach ($val as $k=>$v){ if ($k !== $i++){ $assoc = true; break; } } $res = array(); foreach ($val as $k=>$v){ $v = _json_encode($v); if ($assoc){ $k = '"'.addslashes($k).'"'; $v = $k.':'.$v; } $res[] = $v; } $res = implode(',', $res); return ($assoc)? '{'.$res.'}' : '['.$res.']'; } function generate_code($length = 6) { $seed = rand(0,999999); $seed = str_pad($seed,$length,"0",STR_PAD_LEFT); return $seed; } function parse_params($param) { $param = htmlspecialchars_decode($param); $str = "<?echo $param;?>"; $str = str_replace(array('<?', '?>'), '', $str); eval($str); } function parse_params_return($param) { ob_start(); $param = htmlspecialchars_decode($param); $str = "<?echo $param;?>"; $str = str_replace(array('<?', '?>'), '', $str); eval($str); $ddd = ob_get_contents(); ob_end_clean(); return $ddd; }